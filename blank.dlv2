% ----- BLANK -----

canBePlaced(X,Y) :- 
    isEmpty,
    emptyCell(X,Y,_).

canBePlaced(X,Y) :-
    emptyCell(X,Y,_), 
    neighbors(X,Y,X1,Y1),
    busyCell(X1,Y1,_,_,_).

isEmpty :- 
    #count{X,Y: busyCell(X,Y,_,_,_)} = 0.

% prefer to place in the row/column most near to completeness
:~  solution(X,Y),
    row(X,Nx),
    col(Y,Ny),
    sizeOfMatrix(S),
    Pay = (2 * S) - Nx - Ny. [Pay@1]

% if the board is empty, try to put the cell as centred as possible
:~  isEmpty,
    solution(X,Y),
    sizeOfMatrix(S),
    M=S/2, &abs(X-M;PX), &abs(Y-M;PY). [PX+PY@2]

% place where Types AND Colors highest
:~  not isEmpty,
    solution(X,Y),
    emptyCellProperties(X,Y,Neighbors,Completeness,Types,Colors,Empty),
    Pay = Completeness + 2 * Neighbors - Types - Colors. [Pay@9]

%always a solution
:-  #count{X,Y: solution(X,Y)} = 0.

% prefer an incomplete cell
:~  solution(X,Y),
    emptyCell(X,Y,1). [1@10]